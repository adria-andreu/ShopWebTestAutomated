# .editorconfig for .NET 8 / C#
root = true

############################
# Global defaults
############################
[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = space
trim_trailing_whitespace = true

[*.{yml,yaml,json,md}]
indent_size = 2

############################
# C# defaults
############################
[*.cs]
indent_size = 4
csharp_new_line_before_open_brace = all
csharp_prefer_braces = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_namespace_declarations = file_scoped:error
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Using directives
dotnet_sort_system_directives_first = true
file_header_template = unset

############################
# Naming conventions
############################
# Private fields: _camelCase
dotnet_naming_rule.private_fields_rule.severity = error
dotnet_naming_rule.private_fields_rule.symbols = private_fields
dotnet_naming_rule.private_fields_rule.style = underscore_prefix

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.accessibility = private
dotnet_naming_style.underscore_prefix.capitalization = camel_case
dotnet_naming_style.underscore_prefix.required_prefix = _

# Interfaces: I + PascalCase
dotnet_naming_rule.interface_rule.severity = error
dotnet_naming_rule.interface_rule.symbols = interfaces
dotnet_naming_rule.interface_rule.style = i_prefix

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_style.i_prefix.capitalization = pascal_case
dotnet_naming_style.i_prefix.required_prefix = I

# Constants: UPPER_SNAKE_CASE
dotnet_naming_rule.constants_rule.severity = error
dotnet_naming_rule.constants_rule.symbols = consts
dotnet_naming_rule.constants_rule.style = upper_snake

dotnet_naming_symbols.consts.applicable_kinds = field, local
dotnet_naming_symbols.consts.required_modifiers = const
dotnet_naming_style.upper_snake.capitalization = all_upper

############################
# Analyzer severities
############################
# Treat analyzer diagnostics as warnings locally;
# en CI usaremos TreatWarningsAsErrors=true.
dotnet_analyzer_diagnostic.severity = warning

# Endure infra rules como error
dotnet_diagnostic.IDE0005.severity = error   # using innecesario
dotnet_diagnostic.IDE0051.severity = error   # miembro no usado
dotnet_diagnostic.CA1822.severity = warning  # marcar miembros como static cuando sea posible

# Estilo & diseño
dotnet_diagnostic.SA0001.severity = warning  # StyleCop habilitado
dotnet_diagnostic.SA1101.severity = warning  # prefix this.
dotnet_diagnostic.SA1200.severity = warning  # using location
dotnet_diagnostic.SA1309.severity = error    # underscores en fields (refuerza naming)
dotnet_diagnostic.SA1401.severity = warning  # campos públicos
dotnet_diagnostic.SA1516.severity = warning  # colocación de miembros

############################
# Test files
############################
[tests/**/*.cs]
dotnet_diagnostic.IDE0062.severity = none   # inlining de variables en asserts