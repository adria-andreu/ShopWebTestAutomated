name: E2E Tests (Simplified Architecture)

on:
  push:
    branches: [ main, develop, feature/iteration-04-infrastructure ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Test scope to run'
        required: false
        default: 'smoke'
        type: choice
        options:
          - smoke      # Core scenarios only - fastest feedback
          - full       # All browsers and sites
          - single     # Single browser/site for debugging

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  # Smoke tests - fastest feedback, core scenarios only
  smoke-test:
    if: github.event.inputs.test_scope == 'smoke' || github.event.inputs.test_scope == '' || github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    name: Smoke Tests (chromium, Site A)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj

    - name: Install Playwright browsers (chromium only for smoke)
      run: |
        dotnet build ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj
        pwsh ShopWeb.E2E.Tests/bin/Debug/net8.0/playwright.ps1 install chromium --with-deps

    - name: Run smoke tests
      env:
        BROWSER: 'chromium'
        SITE_ID: 'A'
        HEADED: false
        TRACE_MODE: OnFailure
        GIT_SHA: ${{ github.sha }}
        PIPELINE_ID: ${{ github.run_id }}
      run: |
        dotnet test ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj \
          --configuration Release \
          --logger trx \
          --logger "console;verbosity=normal" \
          --results-directory TestResults \
          --filter "Category=Smoke" \
          -- TestRunParameters.Parameter\(name=\"Browser\",value=\"chromium\"\) \
             TestRunParameters.Parameter\(name=\"SiteId\",value=\"A\"\)

    - name: Upload smoke test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-results
        path: |
          TestResults/
          ShopWeb.E2E.Tests/artifacts/
        retention-days: 7

    - name: Upload traces (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-traces
        path: ShopWeb.E2E.Tests/artifacts/**/*.zip
        retention-days: 3

  # Full test suite - all browsers and sites (sequential to avoid race conditions)
  full-test:
    if: github.event.inputs.test_scope == 'full'
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 1  # Sequential execution - key change to avoid race conditions
      matrix:
        include:
          - browser: 'chromium'
            site_id: 'A'
          - browser: 'chromium' 
            site_id: 'B'
          - browser: 'firefox'
            site_id: 'A'
          - browser: 'firefox'
            site_id: 'B' 
          # WebKit temporarily removed to reduce complexity during stabilization
          # - browser: 'webkit'
          #   site_id: 'A'
          # - browser: 'webkit'
          #   site_id: 'B'
          
    name: Tests (${{ matrix.browser }}, Site ${{ matrix.site_id }})
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj

    - name: Install Playwright browsers (specific browser only)
      run: |
        dotnet build ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj
        pwsh ShopWeb.E2E.Tests/bin/Debug/net8.0/playwright.ps1 install ${{ matrix.browser }} --with-deps

    - name: Run tests
      env:
        BROWSER: ${{ matrix.browser }}
        SITE_ID: ${{ matrix.site_id }}
        HEADED: false
        TRACE_MODE: OnFailure
        GIT_SHA: ${{ github.sha }}
        PIPELINE_ID: ${{ github.run_id }}
      run: |
        dotnet test ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj \
          --configuration Release \
          --logger trx \
          --logger "console;verbosity=normal" \
          --results-directory TestResults \
          -- TestRunParameters.Parameter\(name=\"Browser\",value=\"${{ matrix.browser }}\"\) \
             TestRunParameters.Parameter\(name=\"SiteId\",value=\"${{ matrix.site_id }}\"\)

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.site_id }}
        path: |
          TestResults/
          ShopWeb.E2E.Tests/artifacts/
          !ShopWeb.E2E.Tests/artifacts/**/*.zip
        retention-days: 14

    - name: Upload traces (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-traces-${{ matrix.browser }}-${{ matrix.site_id }}
        path: ShopWeb.E2E.Tests/artifacts/**/*.zip
        retention-days: 7

  # Single test for debugging - specific browser/site combination
  single-test:
    if: github.event.inputs.test_scope == 'single'
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    name: Single Test (Debug Mode)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj

    - name: Install Playwright browsers (chromium for debugging)
      run: |
        dotnet build ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj
        pwsh ShopWeb.E2E.Tests/bin/Debug/net8.0/playwright.ps1 install chromium --with-deps

    - name: Run single test with detailed logging
      env:
        BROWSER: 'chromium'
        SITE_ID: 'A'
        HEADED: false
        TRACE_MODE: On  # Always trace for debugging
        GIT_SHA: ${{ github.sha }}
        PIPELINE_ID: ${{ github.run_id }}
      run: |
        dotnet test ShopWeb.E2E.Tests/ShopWeb.E2E.Tests.csproj \
          --configuration Debug \
          --logger trx \
          --logger "console;verbosity=detailed" \
          --results-directory TestResults \
          --filter "FullyQualifiedName~SiteSwitchingValidationTest.SiteSwitching_WhenChangingConfig_ShouldLoadCorrectSite" \
          -- TestRunParameters.Parameter\(name=\"Browser\",value=\"chromium\"\) \
             TestRunParameters.Parameter\(name=\"SiteId\",value=\"A\"\)

    - name: Upload debug results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-test-results
        path: |
          TestResults/
          ShopWeb.E2E.Tests/artifacts/
        retention-days: 30  # Keep debug traces longer

  # Summary job - always runs to provide overall status
  test-summary:
    if: always()
    needs: [smoke-test, full-test, single-test]
    runs-on: ubuntu-22.04
    name: Test Summary
    
    steps:
    - name: Download all test results
      if: always()
      uses: actions/download-artifact@v4
      with:
        path: all-results
        
    - name: Generate summary
      if: always()
      run: |
        echo "## 📊 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Job | Status | Duration | Browser | Site |" >> $GITHUB_STEP_SUMMARY
        echo "|-----|--------|----------|---------|------|" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ needs.smoke-test.result }}" != "skipped" ]]; then
          status_icon="${{ needs.smoke-test.result == 'success' && '✅' || '❌' }}"
          echo "| Smoke Test | ${status_icon} ${{ needs.smoke-test.result }} | ~5min | chromium | A |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ needs.full-test.result }}" != "skipped" ]]; then
          status_icon="${{ needs.full-test.result == 'success' && '✅' || '❌' }}"
          echo "| Full Test Suite | ${status_icon} ${{ needs.full-test.result }} | ~20min | all | all |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ needs.single-test.result }}" != "skipped" ]]; then
          status_icon="${{ needs.single-test.result == 'success' && '✅' || '❌' }}"
          echo "| Debug Test | ${status_icon} ${{ needs.single-test.result }} | ~3min | chromium | A |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Architecture**: Simplified sequential execution" >> $GITHUB_STEP_SUMMARY
        echo "**Key Changes**: No Allure, reduced parallelism, faster feedback" >> $GITHUB_STEP_SUMMARY
        echo "**Default**: Smoke tests for fastest feedback" >> $GITHUB_STEP_SUMMARY